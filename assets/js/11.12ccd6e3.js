(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{205:function(t,e,a){"use strict";a.r(e);var o=a(0),r=Object(o.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#ooxml-edition"}},[t._v("OOXML edition")])])])]),a("p"),t._v(" "),a("p",[t._v("Why another library to work with Excel XLSX in GO?")]),t._v(" "),a("p",[t._v("Truth be told, developing of any library starts with some personal goals of author. Someone wants simple library to read Excel files, someone wants to create a new file, other wants to add charts.")]),t._v(" "),a("p",[t._v("So what were the goals that time? It's a great pity, but I could not get a library that:")]),t._v(" "),a("ol",[a("li",[t._v("respects existing data/formatting - no corrupted files or lost formatting")])]),t._v(" "),a("blockquote",[a("p",[t._v("What if I need to open a well formatted file created with my favorite desktop application and update only one value?! I must get almost same file with just one updated value. None of existing library was able to do it. Corrupted file or lost formatting is common issue.")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("works with big files - reasonable speed and memory footprint")])]),t._v(" "),a("blockquote",[a("p",[t._v("Same here, someone could not open, others took forever to open with anomaly memory usage.")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("consistent and as small API as possible with enough features set to do most common tasks - learning curve means something")])]),t._v(" "),a("blockquote",[a("p",[t._v("Why?! Because it's not rocket science - open/create file, create/read/update/delete sheets/rows/cols and use styles. XLSX is quite simple format to read/write and GO has quite powerful xml encoder/decoder, so the hardest part - that API.")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("easy to read/understand source code, easy to maintain, easy to contribute - no shadow places/hacks/magic, just read and understand")])]),t._v(" "),a("blockquote",[a("p",[t._v("I was trying to contribute to existing libraries, but...actually it's much faster to create it from ground zero than to refactor existing and get satisfied results or fix some issues.")])]),t._v(" "),a("h3",{attrs:{id:"ooxml-edition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ooxml-edition","aria-hidden":"true"}},[t._v("#")]),t._v(" OOXML edition")]),t._v(" "),a("p",[t._v("XML is compliant with part 1 of the "),a("a",{attrs:{href:"http://www.ecma-international.org/publications/standards/Ecma-376.htm",target:"_blank",rel:"noopener noreferrer"}},[t._v("5th edition"),a("OutboundLink")],1),t._v(" of the ECMA-376 Standard for Office Open XML")]),t._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[t._v("#")]),t._v(" License")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://app.fossa.io/projects/git%2Bgithub.com%2Fplandem%2Fxlsx?ref=badge_large",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://app.fossa.io/api/projects/git%2Bgithub.com%2Fplandem%2Fxlsx.svg?type=large",alt:"FOSSA Status"}}),a("OutboundLink")],1)])])},[],!1,null,null,null);e.default=r.exports}}]);